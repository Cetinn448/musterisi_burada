// Bismillahirrahmanirahim
// Elhamdullillahirabbulalemin
//Es-selatu vesselamu ala rasulina Muhammedin ve ala alihi ve sahbihi, ecmain
// Suphanallahi velhamdulillahi ve La ilahe illallahu ve Allah u Ekber
generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id                    String         @id
  username              String         @unique
  displayName           String
  email                 String?        @unique
  passwordHash          String?
  googleId              String?        @unique
  avatarUrl             String?
  bio                   String?
  sessions              Session[]
  posts                 Post[]
  mmavahi               Mmavahi[]
  bookmarks             Bookmark[]
  createdAt             DateTime      @default(now())
  whatsapp               String?
  contact                String?
  twoFactorCode          String?
  twoFactorCodeExpires   DateTime?

  @@map("users")
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model Post {
  id                  String         @id @default(cuid())
  content             String
  userId              String
  user                User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  attachments         Media[]
  bookmarks           Bookmark[]
  createdAt DateTime @default(now())

  @@map("posts")
}

model Mmavahi {
  id          String  @id @default(cuid())
  content     String
  userId      String
  user        User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  attachments Media[]
  bookmarks   Bookmark[]
  createdAt   DateTime       @default(now())
  // Ek alanlar
  title       String?
  price       String?
  category    String?
  address     String?
  whatsapp    String?
  contact     String?
  lat         Float?
  lng         Float?
  city        String?

  @@map("mmavahi")
}

model Media {
  id     String    @id @default(cuid())
  postId String?
  post   Post?     @relation(fields: [postId], references: [id], onDelete: SetNull)
  type   MediaType
  url    String

  createdAt     DateTime     @default(now())
  Mmavahi       Mmavahi?     @relation(fields: [mmavahiId], references: [id])
  mmavahiId     String?

  @@map("post_media")
}

enum MediaType {
  IMAGE
  VIDEO
}

model Bookmark {
  id     String @id @default(cuid())
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  postId String
  post   Post   @relation(fields: [postId], references: [id], onDelete: Cascade)

  createdAt     DateTime     @default(now())
  Mmavahi       Mmavahi?     @relation(fields: [mmavahiId], references: [id])
  mmavahiId     String?

  @@unique([userId, postId])
  @@map("bookmarks")
}
